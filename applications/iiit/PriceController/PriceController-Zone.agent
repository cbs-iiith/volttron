{
    "exec":"pricecontroller-0.4-py2.7.egg --config \"%c\"--sub\"%s\"--pub \"%p\"",
    "agentid": "PriceController",
    "message": "iSPACE - Price Controller Agent (PCA)",
    "period_read_data": 30,
    "period_process_pp": 10,
    #period_process_loop is not same as period_process_pp
    #period_process_loop: is used for optimization routines like aggregator
    #   & iterator functions. These fns need to be completed as soon as possible
    #period_process_pp: is at what interval apply_pricing_policy should retry
    #   if failed previously
    "period_process_loop": 1,
    "energyDemand_topic": "zone/energydemand",
    "energyDemand_topic_ds": "ds/energydemand",
    "pricePoint_topic_us": "us/pricepoint",
    "pricePoint_topic": "zone/pricepoint",
    "vb_vip_identity": "iiit.volttronbridge",

    # pca state -->  ONLINE, STANDALONE, STANDBY
    #   ONLINE --> actively receive pp_msg from us and submit bids
    #   STANDALONE --> move to this condition if pp_msg_opt_durations elapsed
    #       and no further communication from us
    #       Also, publish opt_pp so as to bring the device to a predefined state
    #       (valid pca_mode --> DEFAULT_OPT, EXTERN_OPT)
    #   STANDBY --> no optimization, but report active power at regular interval
    "pca_state": "ONLINE",

    # pca opt mode --> PASS_ON_PP, DEFAULT_OPT, EXTERN_OPT
    "pca_mode": "PASS_ON_PP",

    # the following params are used if pca_mode = PASS_ON_PP
    "mode_pass_on_params": {
        "bid_timeout": 15,
        # weight factors >= 0 that may be different for each energy consuming device
        #                 [ac,   light, sh1, sh2]
        "weight_factors": [0.50, 0.10, 0.15, 0.15]
    },

    # the following params are used if pca_mode = DEFAULT_OPT
    "mode_default_opt_params": {
        # time to wait for devices to submit their bids.
        # 0 --> wait-for-ever, default 900s (15min)
        "us_bid_timeout": 175,
        "lc_bid_timeout": 35,
        "max_iterations": 10,
        #deadband (Wh)
        "deadband": 100,
        "epsilon": [100, 100],
        # step size, gamma = (pp_max - pp_min) / (ed_max - ed_min)
        # assume pp_max = 1, pp_min = 0, ed_max = 5000, ed_min = 400
        # Google Drive IIIT\FDD_LAB_VOLT_LOGS\Analysis\Book2.xlsx
        # sheet "both rms random pp"
        # https://drive.google.com/open?id=1KdbZ0ZLO7jDwyRhpAlOMzddSiJOYtL-6
        "gamma": [0.0002, 0.0002],
        # momentum factor
        "alpha": [0.0035, 0.0035],
        # weight factors >= 0 that may be different for each smarthub
        "weight_factors": [0.5, 0.5]
    },

    # the following params are used if pca_mode = EXTERN_OPT
    "mode_extrn_opt_params": {
        "vip_identity": "iiit.external_optimizer",
        "pp_topic": "pca/pricepoint",
        "ed_topic": "pca/energydemand"
    }
}
